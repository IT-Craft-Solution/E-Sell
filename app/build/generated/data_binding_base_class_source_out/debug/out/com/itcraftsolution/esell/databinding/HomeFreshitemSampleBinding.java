// Generated by view binder compiler. Do not edit!
package com.itcraftsolution.esell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.itcraftsolution.esell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class HomeFreshitemSampleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView igSampleHomeFreshItem;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final TextView txSampleHomeFreshItemLocation;

  @NonNull
  public final TextView txSampleHomeFreshItemName;

  @NonNull
  public final TextView txSampleHomeFreshItemPrice;

  private HomeFreshitemSampleBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView igSampleHomeFreshItem, @NonNull ImageView imageView3,
      @NonNull ImageView imageView4, @NonNull TextView txSampleHomeFreshItemLocation,
      @NonNull TextView txSampleHomeFreshItemName, @NonNull TextView txSampleHomeFreshItemPrice) {
    this.rootView = rootView;
    this.igSampleHomeFreshItem = igSampleHomeFreshItem;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.txSampleHomeFreshItemLocation = txSampleHomeFreshItemLocation;
    this.txSampleHomeFreshItemName = txSampleHomeFreshItemName;
    this.txSampleHomeFreshItemPrice = txSampleHomeFreshItemPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static HomeFreshitemSampleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static HomeFreshitemSampleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.home_freshitem_sample, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static HomeFreshitemSampleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.igSampleHomeFreshItem;
      ImageView igSampleHomeFreshItem = ViewBindings.findChildViewById(rootView, id);
      if (igSampleHomeFreshItem == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.txSampleHomeFreshItemLocation;
      TextView txSampleHomeFreshItemLocation = ViewBindings.findChildViewById(rootView, id);
      if (txSampleHomeFreshItemLocation == null) {
        break missingId;
      }

      id = R.id.txSampleHomeFreshItemName;
      TextView txSampleHomeFreshItemName = ViewBindings.findChildViewById(rootView, id);
      if (txSampleHomeFreshItemName == null) {
        break missingId;
      }

      id = R.id.txSampleHomeFreshItemPrice;
      TextView txSampleHomeFreshItemPrice = ViewBindings.findChildViewById(rootView, id);
      if (txSampleHomeFreshItemPrice == null) {
        break missingId;
      }

      return new HomeFreshitemSampleBinding((ConstraintLayout) rootView, igSampleHomeFreshItem,
          imageView3, imageView4, txSampleHomeFreshItemLocation, txSampleHomeFreshItemName,
          txSampleHomeFreshItemPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
